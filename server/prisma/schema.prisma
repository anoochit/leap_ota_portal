generator client {
  provider      = "dart run orm"
  binaryTargets = ["native"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator dbml {
  provider = "prisma-dbml-generator"
}

model Device {
  id          Int       @id @default(autoincrement())
  title       String    @unique @db.VarChar(45)
  description String
  sn          String    @unique @db.VarChar(45)
  User        User?     @relation(fields: [userId], references: [id])
  userId      Int?
  Firmware    Firmware? @relation(fields: [firmwareId], references: [id])
  firmwareId  Int?
  publish     Publish   @default(ENABLE)
  createdAt   DateTime  @default(now()) @db.Timestamptz()

  @@map("device")
}

model User {
  id        Int        @id @default(autoincrement())
  name      String     @unique @db.VarChar(45)
  username  String     @unique @db.VarChar(45)
  password  String     @db.VarChar(64)
  devices   Device[]
  firmwares Firmware[]
  role      Role       @default(USER)
  createdAt DateTime   @default(now()) @db.Timestamptz()

  @@map("user")
}

model Firmware {
  id          Int      @id @default(autoincrement())
  title       String   @db.VarChar(45)
  description String
  objectUrl   String
  version     String   @db.VarChar(45)
  User        User?    @relation(fields: [userId], references: [id])
  userId      Int?
  devices     Device[]
  publish     Publish  @default(ENABLE)
  createdAt   DateTime @default(now()) @db.Timestamptz()

  @@map("firmware")
}

enum Role {
  ADMIN /// allowed to do everything
  USER
}

enum Publish {
  ENABLE
  DISABLE
}
